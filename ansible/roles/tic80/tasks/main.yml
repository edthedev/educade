---
# - name: add dirmngr to support adding keys
#   apt:
#     state: present
#     package: dirmngr
# - name: add signature for mit apt repos
#   ansible.builtin.apt_key:
#     keyserver: pgpkeys.mit.edu
#     id: 8B48AD6246925553
# - apt_repository:
#     repo: deb http://archive.debian.org/debian jessie-backports main
#     state: present
# - name: install the easy stuff
#   apt:
#     name:
#      - git
#      - build-essential
#      - ruby-full
#      - libsdl2-dev
#      - zlib1g-dev
 - name: install lua dependencies
   apt:
     name:
      - libreadline-dev
      - libraspberrypi0
      - libraspberrypi-dev
      - libraspberrypi-doc
      - libraspberrypi-bin 
 - stat:
     path: "/usr/local/bin/lua"
   register: have_lua
 - stat:
     path: "/usr/{{ lua_version }}.tar.gz"
   register: have_tgz
 - name: get lua
   uri:
     url: "https://www.lua.org/ftp/{{ lua_version }}.tar.gz"
     dest: "/usr/{{ lua_version }}.tar.gz"
   when: not have_tgz.stat.exists
 - name: decompress
   unarchive:
     creates: "/usr/{{ lua_version }}/README"
     src: "/usr/{{ lua_version }}.tar.gz"
     dest: "/usr/{{ lua_version }}"
     remote_src: true
 - name: build lua
   shell: | 
     cd "/usr/{{ lua_version }}"; make linux test
   when: not have_lua.stat.exists
 - name: install lua
   shell: | 
     cd "/usr/{{ lua_version }}"; make install
   when: not have_lua.stat.exists
# - name: download tic80
#   get_url: 
#     url: https://github.com/nesbox/TIC-80/releases/download/v1.0.2164/tic80-v1.0-rpi.deb
#     dest: /usr/tic80.deb
# - shell: apt-get dist-upgrade
# - name: install from deb
#   apt:
#     deb: /usr/tic80.deb
# - name: add another signature for apt repos
#   ansible.builtin.apt_key:
#     keyserver: pgpkeys.mit.edu
#     id: 7638D0442B90D010
# - name: backport liblua5.3 
#   apt:
#     state: present
#     default_release: jessie-backports
#     name:
#      - liblua5.3-dev
# - apt:
#     state: present
#     name:
#      - git
#      - build-essential
#      - ruby-full
#      - libsdl2-dev
#      - zlib1g-dev
# - name: add build tools
#   apt:
#     name:
#       - cmake
 - name: symlink fix missing so
   file:
     src: /opt/vc/lib/libbcm_host.so
     dest: /usr/lib/libbcm_host.so.0
     state: link
 - stat:
     path: "{{ install_root }}"
   register: cloned_tic80
 - stat:
     path: "/usr/local/bin/tic80"
   register: have_tic80
 - name: Git Clone Tic80 source
   git:
     repo: https://github.com/nesbox/TIC-80 
     dest: "{{ install_root }}"
     recursive: false # Bonus shallow clone to stop issue
     depth: 1
     accept_hostkey: yes
 - name: Git Clone Tic80 source
   git:
     repo: https://github.com/nesbox/TIC-80 
     dest: "{{ install_root }}"
     recursive: true
     depth: 1
     accept_hostkey: yes
   when: not cloned_tic80.stat.exists
 - name: Build Tic80 from source - cmake
   shell: cd "{{ install_root }}/build" && cmake .. -DBUILD_PRO=On
   when: not have_tic80.stat.exists
 - name: Build Tic80 from source - make
   shell: cd "{{ install_root }}/build" && make -j4
   when: not have_tic80.stat.exists
